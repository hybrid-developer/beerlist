apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdkVersion

    resourcePrefix 'startup_'

    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        warningsAsErrors true
        lintConfig file("lint.xml")
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {

    implementation project(':core-viewmodel')
    implementation project(':core-ui')

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation project(':core-test-rxutils')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    implementation "androidx.arch.core:core-runtime:${versions.archRuntime}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.archLifecycleExtensions}"
    implementation("android.arch.navigation:navigation-ui-ktx:${versions.archNavigation}") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation("android.arch.navigation:navigation-fragment-ktx:${versions.archNavigation}") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "com.google.android.gms:play-services-vision:${versions.playServicesVision}"


    /* dagger2 */
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    /* junit */
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.junit.platform:junit-platform-runner:${versions.junitPlatformRunner}"


    /* assertj */
    testImplementation "org.assertj:assertj-core:${versions.assertj}"

    /* mockito */
    testImplementation "com.nhaarman:mockito-kotlin:${versions.mockitoKotlin}"
    testImplementation "androidx.arch.core:core-testing:${versions.archRuntime}"
}
